name: Simple Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetches all history for all branches and tags

    - name: Deployment Step
      run: |
        echo "Deploying the application..."
        # Add your deployment commands here

    - name: Create GitHub Deployment
      id: create_deployment
      uses: chrnorm/deployment-action@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        environment: 'production' # Change to your target environment
        ref: ${{ github.ref }}

    - name: Update Deployment Status (in progress)
      if: always()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
        state: 'in_progress'

    # Place any steps here that you want to run as part of your deployment

    - name: Update Deployment Status (success or failure)
      if: always()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
        state: ${{ job.status }}
    - name: Show Recent Commits
      run: |
        git log --pretty=oneline -n 5
        
    - name: Extract Jira IDs
      id: extract_jira_ids
      run: |
       JIRA_IDS=$(git log -n 10 --pretty=format:%B | grep -oE '[A-Z]+-[0-9]+' | sort -u | tr '\n' ',')
        echo "Extracted Jira IDs: $JIRA_IDS"
        echo "::set-output name=jira_ids::$JIRA_IDS"
    - name: Get Current Timestamp
      run: echo "DEPLOY_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

    - name: Update Jira Issue Label
      env:
        JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
        JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
      run: |
        # Assuming JIRA_ISSUE_KEY is already set, e.g., "TEST-123"
        JIRA_ISSUE_KEY="TEST-6"
        JIRA_DOMAIN="chrisgallivan.atlassian.net" # Replace with your Jira domain
        NEW_LABEL="Prod_Deployed" # Replace with the label you want to add

        # Basic Authentication
        JIRA_AUTH=$(echo -n "$JIRA_EMAIL:$JIRA_TOKEN" | base64)

        # Jira API Endpoint to update an issue
        JIRA_API_ENDPOINT="https://$JIRA_DOMAIN/rest/api/3/issue/$JIRA_ISSUE_KEY"

        # JSON payload to add a new label
        JSON_DATA='{"update": {"labels": [{"add": "'$NEW_LABEL'"}]}}'

        # Print JSON payload for debugging
        echo "JSON Payload: $JSON_DATA"

        # Prepare the curl command
        CURL_COMMAND="curl -v -X PUT -H \"Authorization: Basic $JIRA_AUTH\" -H \"Content-Type: application/json\" -d {"update": {"labels": [{"add": "Prod_Deployed"}]}}' \"$JIRA_API_ENDPOINT\""

        # Print the curl command
          echo "Curl Command:"
          echo "$CURL_COMMAND"

        # Execute the curl command
          RESPONSE=$($CURL_COMMAND)
          echo "Response: $RESPONSE"
      
    - name: Call Webhook with Jira IDs and Timestamp
      run: |
        curl -X POST -H "Content-Type: application/json" \
         -d '{"success": true, "message": "Deployment completed successfully.", "jira_ids": "${{ steps.extract_jira_ids.outputs.jira_ids }}", "timestamp": "'"$DEPLOY_TIMESTAMP"'"}' \
         ${{ secrets.HUB_WEBHOOK_URL }}


