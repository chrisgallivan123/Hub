name: Simple Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetches all history for all branches and tags

    - name: Deployment Step
      run: |
        echo "Deploying the application..."
        # Add your deployment commands here

    - name: Create GitHub Deployment
      id: create_deployment
      uses: chrnorm/deployment-action@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        environment: 'production' # Change to your target environment
        ref: ${{ github.ref }}

    - name: Update Deployment Status (in progress)
      if: always()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
        state: 'in_progress'

    # Place any steps here that you want to run as part of your deployment

    - name: Update Deployment Status (success or failure)
      if: always()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
        state: ${{ job.status }}
    
    - name: Extract and Print Jira IDs
      run: |
          echo "Commit messages since last divergence:"
          git log --pretty=format:%s origin/main...HEAD
          JIRA_IDS=$(git log --pretty=format:%s origin/main...HEAD | grep -oE '[A-Z]+-[0-9]+' | sort -u | tr '\n' ',')
          echo "Extracted Jira IDs: $JIRA_IDS"

    - name: Call Webhook with Jira IDs
      run: |
        curl -X POST -H "Content-Type: application/json" \
             -d '{"success": true, "message": "Deployment completed successfully.", "jira_ids": "${{ steps.extract_jira_ids.outputs.jira_ids }}"}' \
             ${{ secrets.HUB_WEBHOOK_URL }}

